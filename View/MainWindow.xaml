<animatedWindow:AnimatedWindow x:Class="GitTfsShell.View.MainWindow" x:ClassModifier="internal" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                               xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                               xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:viewModel="clr-namespace:GitTfsShell.ViewModel"
                               xmlns:commonView="clr-namespace:Scar.Common.WPF.View;assembly=Scar.Common.WPF.View"
                               xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" xmlns:view="clr-namespace:GitTfsShell.View"
                               xmlns:behaviors="clr-namespace:Scar.Common.WPF.Controls.Behaviors;assembly=Scar.Common.WPF.Controls.Behaviors"
                               xmlns:selectableTextBlock="clr-namespace:Scar.Common.WPF.Controls;assembly=Scar.Common.WPF.Controls.SelectableTextBlock"
                               xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                               xmlns:animatedWindow="clr-namespace:Scar.Common.WPF.View;assembly=Scar.Common.WPF.View.AnimatedWindow"
                               xmlns:externalBrowserHyperlink="clr-namespace:Scar.Common.WPF.Controls;assembly=Scar.Common.WPF.Controls.ExternalBrowserHyperlink"
                               Icon="../icon.ico" mc:Ignorable="d" MinWidth="800" MinHeight="{Binding MinHeight, Mode=OneWay}" Top="{Binding Top, Mode=TwoWay}"
                               SizeToContent="{Binding SizeToContent, Mode=OneWay}" ResizeMode="{Binding ResizeMode, Mode=OneWay}" Background="{StaticResource DarkerBackground}"
                               d:DataContext="{d:DesignInstance viewModel:MainViewModel}" Title="GIT TFS">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding WindowClosingCommand, Mode=OneTime}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <materialDesign:DialogHost IsOpen="{Binding IsDialogOpen, Mode=OneWay}">
        <materialDesign:DialogHost.DialogContent>
            <view:GenericDialogControl />
        </materialDesign:DialogHost.DialogContent>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" Margin="10" commonView:MarginSetter.Margin="10">
                <Grid commonView:MarginSetter.Margin="{StaticResource CommonMargin}" commonView:MarginSetter.Orientation="Horizontal">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBox IsEnabled="{Binding CanBrowse, Mode=OneWay}" Grid.Column="0" MinWidth="300" Text="{Binding DirectoryPath, Mode=OneWay}">
                        <TextBox.InputBindings>
                            <KeyBinding CommandParameter="{Binding Text, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TextBox}}"
                                        Command="{Binding SetDirectoryCommand, Mode=OneTime}" Key="Enter" />
                        </TextBox.InputBindings>
                    </TextBox>
                    <Button Grid.Column="1" Command="{Binding ChooseDirectoryCommand, Mode=OneTime}" Content="Browse..." />
                </Grid>
                <Border Visibility="{Binding HasInfo, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" BorderBrush="{StaticResource Foreground}"
                        BorderThickness="2" Padding="5">
                    <StackPanel commonView:MarginSetter.Margin="10">
                        <StackPanel Visibility="{Binding CreatedShelvesetName, Mode=OneWay, Converter={StaticResource NullableToVisibilityConverter}}"
                                    commonView:MarginSetter.Margin="10" Orientation="Horizontal">
                            <selectableTextBlock:SelectableTextBlock Text="{Binding CreatedShelvesetName, Mode=OneWay, StringFormat=Last shelveset name: {0}}" />
                            <selectableTextBlock:SelectableTextBlock>
                                <externalBrowserHyperlink:ExternalBrowserHyperlink NavigateUri="{Binding CreatedShelvesetUrl, Mode=OneWay}">
                                    Open in browser
                                </externalBrowserHyperlink:ExternalBrowserHyperlink>
                            </selectableTextBlock:SelectableTextBlock>
                            <Button Foreground="ForestGreen" Style="{StaticResource ImageButton}" ToolTip="Copy to clipboard"
                                    Command="{Binding CopyShelvesetToClipboardCommand, Mode=OneTime}">
                                <materialDesign:PackIcon Kind="ContentCopy" />
                            </Button>
                        </StackPanel>
                        <view:TfsInfoControl Visibility="{Binding Mode=OneWay, Converter={StaticResource NullableToVisibilityConverter}}"
                                             DataContext="{Binding TfsInfo, Mode=OneWay}" />
                        <view:GitInfoControl Visibility="{Binding Mode=OneWay, Converter={StaticResource NullableToVisibilityConverter}}"
                                             DataContext="{Binding GitInfo, Mode=OneWay}" />
                    </StackPanel>
                </Border>
            </StackPanel>
            <ListBox Grid.Row="1" VerticalAlignment="Top" ScrollViewer.HorizontalScrollBarVisibility="Auto" SelectionMode="Single" ItemsSource="{Binding Logs, Mode=OneTime}">
                <i:Interaction.Behaviors>
                    <behaviors:ListBoxAutoScrollBehavior />
                </i:Interaction.Behaviors>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <selectableTextBlock:SelectableTextBlock FontFamily="Consolas" FontSize="{StaticResource TinyFontSize}" Text="{Binding Text, Mode=OneWay}"
                                                                 Foreground="{Binding Type, Mode=OneWay, Converter={StaticResource MessageTypeToBrushConverter}}" />
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
            <DockPanel Grid.Row="2" Background="{StaticResource Background}">
                <Button Style="{StaticResource ImageButton}" ToolTip="View logs" Command="{Binding ShowLogsCommand, Mode=OneTime}">
                    <materialDesign:PackIcon Kind="FileDocument" />
                </Button>
                <StackPanel HorizontalAlignment="Right" Orientation="Horizontal" commonView:MarginSetter.Margin="{StaticResource CommonMargin}">
                    <Button Style="{StaticResource ImageButton}" ToolTip="Pull" Command="{Binding PullCommand, Mode=OneTime}">
                        <materialDesign:PackIcon Kind="Download" />
                    </Button>
                    <Button Foreground="Gold" Style="{StaticResource ImageButton}" ToolTip="Unshelve" Command="{Binding OpenUnshelveDialogCommand, Mode=OneTime}">
                        <materialDesign:PackIcon Kind="CloudDownload" />
                    </Button>
                    <Button Foreground="ForestGreen" Style="{StaticResource ImageButton}" ToolTip="Shelve" Command="{Binding OpenShelveDialogCommand, Mode=OneTime}">
                        <materialDesign:PackIcon Kind="CloudUpload" />
                    </Button>
                    <Button DockPanel.Dock="Right" Foreground="OrangeRed" Visibility="{Binding CanCancel, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
                            Style="{StaticResource ImageButton}" ToolTip="Cancel" Command="{Binding CancelCommand, Mode=OneTime}">
                        <materialDesign:PackIcon Kind="Cancel" />
                    </Button>
                </StackPanel>
            </DockPanel>
        </Grid>
    </materialDesign:DialogHost>
</animatedWindow:AnimatedWindow>